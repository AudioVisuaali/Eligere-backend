type Trailer {
  identifier: ID!
  platform: String!
  url: String!
  slug: String!
}

type Genre {
  id: ID!
  value: String!
}

type Ratings {
  imdb: Int
  rottenTomatoes: Int
  metacritic: Int
  googleUsers: Int
}

type Movie {
  identifier: ID!
  title: String!
  thumbnail: String!
  description: String!
  release: String
  length: Int
  genres: [Genre!]!
  trailers: [Trailer!]!
  ratings: Ratings!
  createdAt: String!
}

input InputRating {
  imdb: Int
  rottenTomatoes: Int
  metacritic: Int
  googleUsers: Int
}

input MovieInput {
  title: String!
  thumbnail: String!
  description: String!
  release: String!
  length: Int
  ratings: InputRating!
  genres: [Int!]!
  trailers: [String!]!
}

type Poll {
  identifier: ID!
  title: String!
  description: String!
  createdAt: String!
  userRequired: Boolean!
  opensAt: String
  closesAt: String
  movies: [Movie!]!
}

type AuthData {
  user: User!
  token: String!
  tokenExpiration: Int!
}

type User {
  identifier: ID!
  username: String!
  displayName: String!
  createdAt: String!
}

type Query {
  genres: [Genre!]!
  version: String!
  poll(identifier: String!): Poll
  login(username: String!, password: String!): AuthData!
}

type Mutation {
  createUser(password: String!, username: String!): User!
  updateDisplayName(displayName: String!): String!
  updatePassword(oldPassword: String!, newPassword: String!): Boolean
  createPoll(
    title: String
    description: String!
    userRequired: Boolean!
    movies: [MovieInput!]!
  ): Poll!
}
