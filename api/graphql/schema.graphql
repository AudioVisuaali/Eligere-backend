type Trailer {
  identifier: ID!
  platform: String!
  url: String!
  slug: String!
}

type Genre {
  id: ID!
  value: String!
}

type Ratings {
  imdb: Int
  rottenTomatoes: Int
  metacritic: Int
  googleUsers: Int
}

type Movie {
  identifier: ID!
  title: String!
  thumbnail: String!
  description: String!
  released: String
  length: Int
  genres: [Genre!]!
  trailers: [Trailer!]!
  ratings: Ratings!
  createdAt: String!
}

input InputRating {
  imdb: Int
  rottenTomatoes: Int
  metacritic: Int
  googleUsers: Int
}

input MovieInput {
  title: String!
  thumbnail: String!
  description: String!
  released: String!
  length: Int
  ratings: InputRating!
  genres: [Int!]!
  trailers: [String!]!
}

type Poll {
  identifier: ID!
  title: String!
  description: String!
  createdAt: String!
  userRequired: Boolean!
  opensAt: String
  closesAt: String
  movies: [Movie!]!
  community: Community
}

type Community {
  identifier: ID!
  title: String!
  description: String!
  polls: [Poll!]!
  createdAt: String!
}

type AuthData {
  user: User!
  token: String!
  tokenExpiration: Int!
}

type User {
  identifier: ID!
  username: String!
  displayName: String!
  createdAt: String!
  polls: [Poll!]!
  communities: [Community!]!
}

type Query {
  genres: [Genre!]!
  version: String!
  movie(identifier: String!): Movie!
  trailer(identifier: String!): Trailer!
  poll(identifier: String!): Poll
  login(username: String!, password: String!): AuthData!
  checkSession: User!
  usernameExists(displayName: String!): Boolean!
}

type Mutation {
  createUser(password: String!, username: String!): User!
  updateDisplayName(displayName: String!): String!
  updatePassword(oldPassword: String!, newPassword: String!): Boolean
  trailer(identifier: String!): Trailer!
  deleteSession(identifier: String!): Boolean
  updateMovie(
    identifier: String!
    title: String
    thumbnail: String
    description: String
    released: String
    length: Int
    genres: [Int]
    ratings: InputRating
  ): Movie!
  updatePoll(
    identifier: String!
    title: String
    description: String
    opensAt: String
    closesAt: String
  ): Poll!
  updateTrailer(identifier: String!, url: String!): Trailer!
  createPoll(
    title: String!
    description: String!
    userRequired: Boolean!
    movies: [MovieInput!]!
    community: String
  ): Poll!

  deleteTrailer(identifier: String!): Boolean
  deleteMovie(identifier: String!): Boolean
  deletePoll(identifier: String!): Boolean
}
